/* This file is auto-generated by tailwindcss-uikit-colors */
import { Config } from "tailwindcss";

const configColors = {
  red: {
    50: "#fef2f2",
    100: "#fee2e2",
    200: "#fecaca",
    300: "#fca5a5",
    400: "#f87171",
    500: "#ef4444",
    600: "#dc2626",
    700: "#b91c1c",
    800: "#991b1b",
    900: "#7f1d1d",
    950: "#450a0a",
    DEFAULT: "rgb(var(--color-red) / <alpha-value>)",
  },
  orange: {
    50: "#fff7ed",
    100: "#ffedd5",
    200: "#fed7aa",
    300: "#fdba74",
    400: "#fb923c",
    500: "#f97316",
    600: "#ea580c",
    700: "#c2410c",
    800: "#9a3412",
    900: "#7c2d12",
    950: "#431407",
    DEFAULT: "rgb(var(--color-orange) / <alpha-value>)",
  },
  yellow: {
    50: "#fefce8",
    100: "#fef9c3",
    200: "#fef08a",
    300: "#fde047",
    400: "#facc15",
    500: "#eab308",
    600: "#ca8a04",
    700: "#a16207",
    800: "#854d0e",
    900: "#713f12",
    950: "#422006",
    DEFAULT: "rgb(var(--color-yellow) / <alpha-value>)",
  },
  green: {
    50: "#f0fdf4",
    100: "#dcfce7",
    200: "#bbf7d0",
    300: "#86efac",
    400: "#4ade80",
    500: "#22c55e",
    600: "#16a34a",
    700: "#15803d",
    800: "#166534",
    900: "#14532d",
    950: "#052e16",
    DEFAULT: "rgb(var(--color-green) / <alpha-value>)",
  },
  mint: "rgb(var(--color-mint) / <alpha-value>)",
  teal: {
    50: "#f0fdfa",
    100: "#ccfbf1",
    200: "#99f6e4",
    300: "#5eead4",
    400: "#2dd4bf",
    500: "#14b8a6",
    600: "#0d9488",
    700: "#0f766e",
    800: "#115e59",
    900: "#134e4a",
    950: "#042f2e",
    DEFAULT: "rgb(var(--color-teal) / <alpha-value>)",
  },
  cyan: {
    50: "#ecfeff",
    100: "#cffafe",
    200: "#a5f3fc",
    300: "#67e8f9",
    400: "#22d3ee",
    500: "#06b6d4",
    600: "#0891b2",
    700: "#0e7490",
    800: "#155e75",
    900: "#164e63",
    950: "#083344",
    DEFAULT: "rgb(var(--color-cyan) / <alpha-value>)",
  },
  blue: {
    50: "#eff6ff",
    100: "#dbeafe",
    200: "#bfdbfe",
    300: "#93c5fd",
    400: "#60a5fa",
    500: "#3b82f6",
    600: "#2563eb",
    700: "#1d4ed8",
    800: "#1e40af",
    900: "#1e3a8a",
    950: "#172554",
    DEFAULT: "rgb(var(--color-blue) / <alpha-value>)",
  },
  indigo: {
    50: "#eef2ff",
    100: "#e0e7ff",
    200: "#c7d2fe",
    300: "#a5b4fc",
    400: "#818cf8",
    500: "#6366f1",
    600: "#4f46e5",
    700: "#4338ca",
    800: "#3730a3",
    900: "#312e81",
    950: "#1e1b4b",
    DEFAULT: "rgb(var(--color-indigo) / <alpha-value>)",
  },
  purple: {
    50: "#faf5ff",
    100: "#f3e8ff",
    200: "#e9d5ff",
    300: "#d8b4fe",
    400: "#c084fc",
    500: "#a855f7",
    600: "#9333ea",
    700: "#7e22ce",
    800: "#6b21a8",
    900: "#581c87",
    950: "#3b0764",
    DEFAULT: "rgb(var(--color-purple) / <alpha-value>)",
  },
  pink: {
    50: "#fdf2f8",
    100: "#fce7f3",
    200: "#fbcfe8",
    300: "#f9a8d4",
    400: "#f472b6",
    500: "#ec4899",
    600: "#db2777",
    700: "#be185d",
    800: "#9d174d",
    900: "#831843",
    950: "#500724",
    DEFAULT: "rgb(var(--color-pink) / <alpha-value>)",
  },
  brown: "rgb(var(--color-brown) / <alpha-value>)",
  gray: {
    2: "color-mix(in srgb, rgba(var(--color-gray2)) calc(<alpha-value> * 100%), transparent)",
    3: "color-mix(in srgb, rgba(var(--color-gray3)) calc(<alpha-value> * 100%), transparent)",
    4: "color-mix(in srgb, rgba(var(--color-gray4)) calc(<alpha-value> * 100%), transparent)",
    5: "color-mix(in srgb, rgba(var(--color-gray5)) calc(<alpha-value> * 100%), transparent)",
    6: "color-mix(in srgb, rgba(var(--color-gray6)) calc(<alpha-value> * 100%), transparent)",
    50: "#f9fafb",
    100: "#f3f4f6",
    200: "#e5e7eb",
    300: "#d1d5db",
    400: "#9ca3af",
    500: "#6b7280",
    600: "#4b5563",
    700: "#374151",
    800: "#1f2937",
    900: "#111827",
    950: "#030712",
    DEFAULT: "rgb(var(--color-gray) / <alpha-value>)",
  },
  fill: "color-mix(in srgb, rgba(var(--color-fill)) calc(<alpha-value> * 100%), transparent)",
  "fill-secondary":
    "color-mix(in srgb, rgba(var(--color-fillSecondary)) calc(<alpha-value> * 100%), transparent)",
  "fill-tertiary":
    "color-mix(in srgb, rgba(var(--color-fillTertiary)) calc(<alpha-value> * 100%), transparent)",
  "fill-quaternary":
    "color-mix(in srgb, rgba(var(--color-fillQuaternary)) calc(<alpha-value> * 100%), transparent)",
  "fill-quinary":
    "color-mix(in srgb, rgba(var(--color-fillQuinary)) calc(<alpha-value> * 100%), transparent)",
  "fill-vibrant": "rgb(var(--color-fillVibrant) / <alpha-value>)",
  "fill-vibrant-secondary":
    "rgb(var(--color-fillVibrantSecondary) / <alpha-value>)",
  "fill-vibrant-tertiary":
    "rgb(var(--color-fillVibrantTertiary) / <alpha-value>)",
  "fill-vibrant-quaternary":
    "rgb(var(--color-fillVibrantQuaternary) / <alpha-value>)",
  "fill-vibrant-quinary":
    "rgb(var(--color-fillVibrantQuinary) / <alpha-value>)",
  text: "color-mix(in srgb, rgba(var(--color-text)) calc(<alpha-value> * 100%), transparent)",
  "text-secondary":
    "color-mix(in srgb, rgba(var(--color-textSecondary)) calc(<alpha-value> * 100%), transparent)",
  "text-tertiary":
    "color-mix(in srgb, rgba(var(--color-textTertiary)) calc(<alpha-value> * 100%), transparent)",
  "text-quaternary":
    "color-mix(in srgb, rgba(var(--color-textQuaternary)) calc(<alpha-value> * 100%), transparent)",
  "text-quinary":
    "color-mix(in srgb, rgba(var(--color-textQuinary)) calc(<alpha-value> * 100%), transparent)",
  "text-vibrant": "rgb(var(--color-textVibrant) / <alpha-value>)",
  "text-vibrant-secondary":
    "rgb(var(--color-textVibrantSecondary) / <alpha-value>)",
  "text-vibrant-tertiary":
    "rgb(var(--color-textVibrantTertiary) / <alpha-value>)",
  "text-vibrant-quaternary":
    "rgb(var(--color-textVibrantQuaternary) / <alpha-value>)",
  "text-vibrant-quinary":
    "rgb(var(--color-textVibrantQuinary) / <alpha-value>)",
  "material-ultra-thick":
    "color-mix(in srgb, rgba(var(--color-materialUltraThick)) calc(<alpha-value> * 100%), transparent)",
  "material-thick":
    "color-mix(in srgb, rgba(var(--color-materialThick)) calc(<alpha-value> * 100%), transparent)",
  "material-medium":
    "color-mix(in srgb, rgba(var(--color-materialMedium)) calc(<alpha-value> * 100%), transparent)",
  "material-thin":
    "color-mix(in srgb, rgba(var(--color-materialThin)) calc(<alpha-value> * 100%), transparent)",
  "material-ultra-thin":
    "color-mix(in srgb, rgba(var(--color-materialUltraThin)) calc(<alpha-value> * 100%), transparent)",
  "material-opaque": "rgb(var(--color-materialOpaque) / <alpha-value>)",
  "control-enabled": "rgb(var(--color-controlEnabled) / <alpha-value>)",
  "control-disabled": "rgb(var(--color-controlDisabled) / <alpha-value>)",
  menu: "color-mix(in srgb, rgba(var(--color-menu)) calc(<alpha-value> * 100%), transparent)",
  popover:
    "color-mix(in srgb, rgba(var(--color-popover)) calc(<alpha-value> * 100%), transparent)",
  titlebar:
    "color-mix(in srgb, rgba(var(--color-titlebar)) calc(<alpha-value> * 100%), transparent)",
  sidebar:
    "color-mix(in srgb, rgba(var(--color-sidebar)) calc(<alpha-value> * 100%), transparent)",
  "selection-focused":
    "color-mix(in srgb, rgba(var(--color-selectionFocused)) calc(<alpha-value> * 100%), transparent)",
  "selection-focused-fill":
    "rgb(var(--color-selectionFocusedFill) / <alpha-value>)",
  "selection-unfocused":
    "color-mix(in srgb, rgba(var(--color-selectionUnfocused)) calc(<alpha-value> * 100%), transparent)",
  "selection-unfocused-fill":
    "color-mix(in srgb, rgba(var(--color-selectionUnfocusedFill)) calc(<alpha-value> * 100%), transparent)",
  "header-view":
    "color-mix(in srgb, rgba(var(--color-headerView)) calc(<alpha-value> * 100%), transparent)",
  tooltip:
    "color-mix(in srgb, rgba(var(--color-tooltip)) calc(<alpha-value> * 100%), transparent)",
  "under-window-background":
    "color-mix(in srgb, rgba(var(--color-underWindowBackground)) calc(<alpha-value> * 100%), transparent)",
  "red-light": "rgb(var(--color-red-light) / <alpha-value>)",
  "orange-light": "rgb(var(--color-orange-light) / <alpha-value>)",
  "yellow-light": "rgb(var(--color-yellow-light) / <alpha-value>)",
  "green-light": "rgb(var(--color-green-light) / <alpha-value>)",
  "mint-light": "rgb(var(--color-mint-light) / <alpha-value>)",
  "teal-light": "rgb(var(--color-teal-light) / <alpha-value>)",
  "cyan-light": "rgb(var(--color-cyan-light) / <alpha-value>)",
  "blue-light": "rgb(var(--color-blue-light) / <alpha-value>)",
  "indigo-light": "rgb(var(--color-indigo-light) / <alpha-value>)",
  "purple-light": "rgb(var(--color-purple-light) / <alpha-value>)",
  "pink-light": "rgb(var(--color-pink-light) / <alpha-value>)",
  "brown-light": "rgb(var(--color-brown-light) / <alpha-value>)",
  "gray-light": "rgb(var(--color-gray-light) / <alpha-value>)",
  "fill-light":
    "color-mix(in srgb, rgba(var(--color-fill-light)) calc(<alpha-value> * 100%), transparent)",
  "fill-secondary-light":
    "color-mix(in srgb, rgba(var(--color-fillSecondary-light)) calc(<alpha-value> * 100%), transparent)",
  "fill-tertiary-light":
    "color-mix(in srgb, rgba(var(--color-fillTertiary-light)) calc(<alpha-value> * 100%), transparent)",
  "fill-quaternary-light":
    "color-mix(in srgb, rgba(var(--color-fillQuaternary-light)) calc(<alpha-value> * 100%), transparent)",
  "fill-quinary-light":
    "color-mix(in srgb, rgba(var(--color-fillQuinary-light)) calc(<alpha-value> * 100%), transparent)",
  "fill-vibrant-light": "rgb(var(--color-fillVibrant-light) / <alpha-value>)",
  "fill-vibrant-secondary-light":
    "rgb(var(--color-fillVibrantSecondary-light) / <alpha-value>)",
  "fill-vibrant-tertiary-light":
    "rgb(var(--color-fillVibrantTertiary-light) / <alpha-value>)",
  "fill-vibrant-quaternary-light":
    "rgb(var(--color-fillVibrantQuaternary-light) / <alpha-value>)",
  "fill-vibrant-quinary-light":
    "rgb(var(--color-fillVibrantQuinary-light) / <alpha-value>)",
  "text-light":
    "color-mix(in srgb, rgba(var(--color-text-light)) calc(<alpha-value> * 100%), transparent)",
  "text-secondary-light":
    "color-mix(in srgb, rgba(var(--color-textSecondary-light)) calc(<alpha-value> * 100%), transparent)",
  "text-tertiary-light":
    "color-mix(in srgb, rgba(var(--color-textTertiary-light)) calc(<alpha-value> * 100%), transparent)",
  "text-quaternary-light":
    "color-mix(in srgb, rgba(var(--color-textQuaternary-light)) calc(<alpha-value> * 100%), transparent)",
  "text-quinary-light":
    "color-mix(in srgb, rgba(var(--color-textQuinary-light)) calc(<alpha-value> * 100%), transparent)",
  "text-vibrant-light": "rgb(var(--color-textVibrant-light) / <alpha-value>)",
  "text-vibrant-secondary-light":
    "rgb(var(--color-textVibrantSecondary-light) / <alpha-value>)",
  "text-vibrant-tertiary-light":
    "rgb(var(--color-textVibrantTertiary-light) / <alpha-value>)",
  "text-vibrant-quaternary-light":
    "rgb(var(--color-textVibrantQuaternary-light) / <alpha-value>)",
  "text-vibrant-quinary-light":
    "rgb(var(--color-textVibrantQuinary-light) / <alpha-value>)",
  "material-ultra-thick-light":
    "color-mix(in srgb, rgba(var(--color-materialUltraThick-light)) calc(<alpha-value> * 100%), transparent)",
  "material-thick-light":
    "color-mix(in srgb, rgba(var(--color-materialThick-light)) calc(<alpha-value> * 100%), transparent)",
  "material-medium-light":
    "color-mix(in srgb, rgba(var(--color-materialMedium-light)) calc(<alpha-value> * 100%), transparent)",
  "material-thin-light":
    "color-mix(in srgb, rgba(var(--color-materialThin-light)) calc(<alpha-value> * 100%), transparent)",
  "material-ultra-thin-light":
    "color-mix(in srgb, rgba(var(--color-materialUltraThin-light)) calc(<alpha-value> * 100%), transparent)",
  "material-opaque-light":
    "rgb(var(--color-materialOpaque-light) / <alpha-value>)",
  "control-enabled-light":
    "rgb(var(--color-controlEnabled-light) / <alpha-value>)",
  "control-disabled-light":
    "rgb(var(--color-controlDisabled-light) / <alpha-value>)",
  "menu-light":
    "color-mix(in srgb, rgba(var(--color-menu-light)) calc(<alpha-value> * 100%), transparent)",
  "popover-light":
    "color-mix(in srgb, rgba(var(--color-popover-light)) calc(<alpha-value> * 100%), transparent)",
  "titlebar-light":
    "color-mix(in srgb, rgba(var(--color-titlebar-light)) calc(<alpha-value> * 100%), transparent)",
  "sidebar-light":
    "color-mix(in srgb, rgba(var(--color-sidebar-light)) calc(<alpha-value> * 100%), transparent)",
  "selection-focused-light":
    "color-mix(in srgb, rgba(var(--color-selectionFocused-light)) calc(<alpha-value> * 100%), transparent)",
  "selection-focused-fill-light":
    "rgb(var(--color-selectionFocusedFill-light) / <alpha-value>)",
  "selection-unfocused-light":
    "color-mix(in srgb, rgba(var(--color-selectionUnfocused-light)) calc(<alpha-value> * 100%), transparent)",
  "selection-unfocused-fill-light":
    "color-mix(in srgb, rgba(var(--color-selectionUnfocusedFill-light)) calc(<alpha-value> * 100%), transparent)",
  "header-view-light":
    "color-mix(in srgb, rgba(var(--color-headerView-light)) calc(<alpha-value> * 100%), transparent)",
  "tooltip-light":
    "color-mix(in srgb, rgba(var(--color-tooltip-light)) calc(<alpha-value> * 100%), transparent)",
  "under-window-background-light":
    "color-mix(in srgb, rgba(var(--color-underWindowBackground-light)) calc(<alpha-value> * 100%), transparent)",
  "red-dark": "rgb(var(--color-red-dark) / <alpha-value>)",
  "orange-dark": "rgb(var(--color-orange-dark) / <alpha-value>)",
  "yellow-dark": "rgb(var(--color-yellow-dark) / <alpha-value>)",
  "green-dark": "rgb(var(--color-green-dark) / <alpha-value>)",
  "mint-dark": "rgb(var(--color-mint-dark) / <alpha-value>)",
  "teal-dark": "rgb(var(--color-teal-dark) / <alpha-value>)",
  "cyan-dark": "rgb(var(--color-cyan-dark) / <alpha-value>)",
  "blue-dark": "rgb(var(--color-blue-dark) / <alpha-value>)",
  "indigo-dark": "rgb(var(--color-indigo-dark) / <alpha-value>)",
  "purple-dark": "rgb(var(--color-purple-dark) / <alpha-value>)",
  "pink-dark": "rgb(var(--color-pink-dark) / <alpha-value>)",
  "brown-dark": "rgb(var(--color-brown-dark) / <alpha-value>)",
  "gray-dark": "rgb(var(--color-gray-dark) / <alpha-value>)",
  "fill-dark":
    "color-mix(in srgb, rgba(var(--color-fill-dark)) calc(<alpha-value> * 100%), transparent)",
  "fill-secondary-dark":
    "color-mix(in srgb, rgba(var(--color-fillSecondary-dark)) calc(<alpha-value> * 100%), transparent)",
  "fill-tertiary-dark":
    "color-mix(in srgb, rgba(var(--color-fillTertiary-dark)) calc(<alpha-value> * 100%), transparent)",
  "fill-quaternary-dark":
    "color-mix(in srgb, rgba(var(--color-fillQuaternary-dark)) calc(<alpha-value> * 100%), transparent)",
  "fill-quinary-dark":
    "color-mix(in srgb, rgba(var(--color-fillQuinary-dark)) calc(<alpha-value> * 100%), transparent)",
  "fill-vibrant-dark": "rgb(var(--color-fillVibrant-dark) / <alpha-value>)",
  "fill-vibrant-secondary-dark":
    "rgb(var(--color-fillVibrantSecondary-dark) / <alpha-value>)",
  "fill-vibrant-tertiary-dark":
    "rgb(var(--color-fillVibrantTertiary-dark) / <alpha-value>)",
  "fill-vibrant-quaternary-dark":
    "rgb(var(--color-fillVibrantQuaternary-dark) / <alpha-value>)",
  "fill-vibrant-quinary-dark":
    "rgb(var(--color-fillVibrantQuinary-dark) / <alpha-value>)",
  "text-dark":
    "color-mix(in srgb, rgba(var(--color-text-dark)) calc(<alpha-value> * 100%), transparent)",
  "text-secondary-dark":
    "color-mix(in srgb, rgba(var(--color-textSecondary-dark)) calc(<alpha-value> * 100%), transparent)",
  "text-tertiary-dark":
    "color-mix(in srgb, rgba(var(--color-textTertiary-dark)) calc(<alpha-value> * 100%), transparent)",
  "text-quaternary-dark":
    "color-mix(in srgb, rgba(var(--color-textQuaternary-dark)) calc(<alpha-value> * 100%), transparent)",
  "text-quinary-dark":
    "color-mix(in srgb, rgba(var(--color-textQuinary-dark)) calc(<alpha-value> * 100%), transparent)",
  "text-vibrant-dark": "rgb(var(--color-textVibrant-dark) / <alpha-value>)",
  "text-vibrant-secondary-dark":
    "rgb(var(--color-textVibrantSecondary-dark) / <alpha-value>)",
  "text-vibrant-tertiary-dark":
    "rgb(var(--color-textVibrantTertiary-dark) / <alpha-value>)",
  "text-vibrant-quaternary-dark":
    "rgb(var(--color-textVibrantQuaternary-dark) / <alpha-value>)",
  "text-vibrant-quinary-dark":
    "rgb(var(--color-textVibrantQuinary-dark) / <alpha-value>)",
  "material-ultra-thick-dark":
    "color-mix(in srgb, rgba(var(--color-materialUltraThick-dark)) calc(<alpha-value> * 100%), transparent)",
  "material-thick-dark":
    "color-mix(in srgb, rgba(var(--color-materialThick-dark)) calc(<alpha-value> * 100%), transparent)",
  "material-medium-dark":
    "color-mix(in srgb, rgba(var(--color-materialMedium-dark)) calc(<alpha-value> * 100%), transparent)",
  "material-thin-dark":
    "color-mix(in srgb, rgba(var(--color-materialThin-dark)) calc(<alpha-value> * 100%), transparent)",
  "material-ultra-thin-dark":
    "color-mix(in srgb, rgba(var(--color-materialUltraThin-dark)) calc(<alpha-value> * 100%), transparent)",
  "material-opaque-dark":
    "rgb(var(--color-materialOpaque-dark) / <alpha-value>)",
  "control-enabled-dark":
    "color-mix(in srgb, rgba(var(--color-controlEnabled-dark)) calc(<alpha-value> * 100%), transparent)",
  "control-disabled-dark":
    "color-mix(in srgb, rgba(var(--color-controlDisabled-dark)) calc(<alpha-value> * 100%), transparent)",
  "menu-dark":
    "color-mix(in srgb, rgba(var(--color-menu-dark)) calc(<alpha-value> * 100%), transparent)",
  "popover-dark":
    "color-mix(in srgb, rgba(var(--color-popover-dark)) calc(<alpha-value> * 100%), transparent)",
  "titlebar-dark":
    "color-mix(in srgb, rgba(var(--color-titlebar-dark)) calc(<alpha-value> * 100%), transparent)",
  "sidebar-dark":
    "color-mix(in srgb, rgba(var(--color-sidebar-dark)) calc(<alpha-value> * 100%), transparent)",
  "selection-focused-dark":
    "color-mix(in srgb, rgba(var(--color-selectionFocused-dark)) calc(<alpha-value> * 100%), transparent)",
  "selection-focused-fill-dark":
    "rgb(var(--color-selectionFocusedFill-dark) / <alpha-value>)",
  "selection-unfocused-dark":
    "color-mix(in srgb, rgba(var(--color-selectionUnfocused-dark)) calc(<alpha-value> * 100%), transparent)",
  "selection-unfocused-fill-dark":
    "color-mix(in srgb, rgba(var(--color-selectionUnfocusedFill-dark)) calc(<alpha-value> * 100%), transparent)",
  "header-view-dark":
    "color-mix(in srgb, rgba(var(--color-headerView-dark)) calc(<alpha-value> * 100%), transparent)",
  "tooltip-dark":
    "color-mix(in srgb, rgba(var(--color-tooltip-dark)) calc(<alpha-value> * 100%), transparent)",
  "under-window-background-dark":
    "color-mix(in srgb, rgba(var(--color-underWindowBackground-dark)) calc(<alpha-value> * 100%), transparent)",
};

export const withUIKit = (config: Config) => {
  config.theme = config.theme || {};
  config.theme.extend = config.theme.extend || {};
  config.theme.extend.colors = config.theme.extend.colors || {};
  config.theme.extend.colors = {
    ...config.theme.extend.colors,
    ...configColors,
  };
  return config;
};

export { configColors as colors };
